#include <stdio.h>
#include "../include/modrm.h"
#include "../include/char_to_instructions.h"
#include "../include/get_instructions.h"
#include "../include/get_text_tokens.h"
#include <string.h>



struct __instruction encode_registers_rm( char * op1,  char * op2, bool op1_rm)
{
      // The second operand is encoded with the registers
      // The first operand is encoded with the rm
  if (op1[1] == '8' || op1[1] == '9' || op1[1] == '1' ) // these are the r8-r15 registers

}

void table_register_new(struct temprm * temp, char * reg, bool is_first)
{
  int returned = atoi(reg+1);

  if (is_first)
      temp->first = returned - 8;

  else
    temp->second = returned - 8;
}


unsigned char * encode_rex_none( char * op1,  char * op2, bool op1_rm)
{
  // This will be slow
  struct temprm temp;
  if (op1[0] == 'r' && op1[1] == '8')
    {
      temp.first = 0;
    }
}



